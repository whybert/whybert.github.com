<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Whybert Blog</title>
        <description>Whybert Blog - Huaiyuan Wang</description>
        <link>http://www.whybert.com</link>
        <link>http://www.whybert.com</link>
        <lastBuildDate>2014-03-30T02:50:43+08:00</lastBuildDate>
        <pubDate>2014-03-30T02:50:43+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>读《c专家编程》总结</title>
                <description>&lt;h3 id=&quot;c&quot;&gt;读《C专家编程》总结&lt;/h3&gt;

&lt;p&gt;去年年底读的，时间有点久了，读的时候的很多体会也忘了，单对我感兴趣的内容做个简单总结。正好最近看到知乎上程序员约架的事，我只能说，我C语言很渣，写错什么莫怪。。&lt;/p&gt;

&lt;h4 id=&quot;1c&quot;&gt;1、C的历史：&lt;/h4&gt;

&lt;p&gt;C语言的产生是源于Multics工程。Multics失败了，之后Ken Thompson和Dennis Ritchie总结教训用汇编编写了UNIX，因为用汇编写UNIX太笨拙，所以Thompson创建了B语言，并尝试用B语言进行UNIX系统编程，但是B语言存在数据类型和效率等方面的问题，导致Thompson没能用B语言实现UNIX。之后Dennis Ritchie解决了B语言的一些问题，创立了New B语言，不久后这种语言被称为了C语言，UNIX也开始用C实现了。这时（1972年）的C还是早期的C,1978年出版了TCPL，由这个书定义的C称作K&amp;amp;R C，1989年ANSI C标准最终形成（C89）。之后又有了C99和C11，这都在《C专家编程》出版之后了。&lt;/p&gt;

&lt;h4 id=&quot;2cansi_c&quot;&gt;2、C和ANSI C的一些特点：&lt;/h4&gt;

&lt;p&gt;C语言的许多特性是方便编译器设计者建立的。&lt;/p&gt;

&lt;p&gt;C编译器不曾实现的功能是通过C预处理器和运行时函数库（runtime library）实现的，且绝大多数库函数和辅助程序需要程序员显式调用。&lt;/p&gt;

&lt;p&gt;ANSI C的几个术语:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unportable code: implement ation-defined, unspecified

bad code: undefined, constraint

portable code: strictly-comforming&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了保证代码的可移植，只能使用已确定的特性、不突破编译限制、不产生依赖由编译器定义的或未确定的或未定义的特性的输出。&lt;/p&gt;

&lt;h4 id=&quot;3c&quot;&gt;3、C的一些槽点：&lt;/h4&gt;

&lt;p&gt;一个符号具有多种含义：* &amp;amp; void static () 等&lt;/p&gt;

&lt;p&gt;复杂的语法声明：左右法则、typedef&lt;/p&gt;

&lt;p&gt;不合理的优先级顺序：先乘除后加减，其他一律加括号&lt;/p&gt;

&lt;p&gt;类型转换规则：unsigned与signed比较时signed转换为unsigned等&lt;/p&gt;

&lt;p&gt;其他的一些细节，如switch默认fall through等&lt;/p&gt;

&lt;h4 id=&quot;4&quot;&gt;4、数组和指针：&lt;/h4&gt;

&lt;p&gt;数组不是指针，在某些情况下数组可以“看作”是指针。数组直接访问数据，指针间接访问数据，即用指针时CPU要多一次访问内存的操作。&lt;/p&gt;

&lt;p&gt;在编译时编译器要根据上下文判断一个符号指的是符号的地址（左值）还是符号的值（右值），而表达式内的数组名可“看作”指针，其地址在编译时可知，即不需要解引用，此时若把数组“等同”于指针，则会多一次解引用操作。所以除作为函数参数等情况外定义与声明应当匹配。&lt;/p&gt;

&lt;p&gt;对数组取地址实际上会得到一个指向数组的指针。多维数组在由编译器改写为行参时，数组的数组会被改写为数组的指针，而不是指针的指针。&lt;/p&gt;

&lt;h4 id=&quot;5&quot;&gt;5、运行时数据结构：&lt;/h4&gt;

&lt;p&gt;a.out：魔数、BSS、数据段、文本段等等。&lt;/p&gt;

&lt;p&gt;运行时数据结构：堆栈、活动记录、数据、堆等。&lt;/p&gt;

&lt;p&gt;setjmp, longjmp: setjmp(jmp_buf j);longjmp(jmp_buf j, int i);&lt;/p&gt;

&lt;h4 id=&quot;6&quot;&gt;6、总结：&lt;/h4&gt;

&lt;p&gt;其实作者在书里讲了很多故事，比单纯的技术部分要有趣的多，技术部分的举例很多也很经典。这本书能作为C语言的经典进阶书之一，我觉得一是技术讲的精炼透彻，二就是作者高超的吐槽和情景分析技巧能引发读者对语言更深层的兴趣。书里还讲了链接装载、内存等内容，这方面的书我推荐看《程序员的自我修养》。&lt;/p&gt;</description>
                <link>http://www.whybert.com/2014/03/30/c</link>
                <guid>http://www.whybert.com/2014/03/30/c</guid>
                <pubDate>2014-03-30T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
